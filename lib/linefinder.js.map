{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/linefinder.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n#===========================================================================================================\nclass @Linefinder\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT use intertype ###\n    defaults =\n      box_element_name:   'div'\n      box_class_name:     'box'\n      xxx_height_factor:  1 / 2 ### relative minimum height to recognize line step ###\n    @cfg = Object.freeze { defaults..., cfg..., }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _draw_box: ( rectangle, cfg ) ->\n    cfg               = { @cfg..., cfg..., }\n    box               = document.createElement cfg.element_name\n    box.style.top     = document.documentElement.scrollTop  + rectangle.top       + 'px'\n    box.style.left    = document.documentElement.scrollLeft + rectangle.left      + 'px'\n    box.style.width   =                                       rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =                                       rectangle.height    + 'px'\n    box.classList.add cfg.class_name\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  draw_box: ( rectangle ) ->\n    box               = document.createElement @cfg.box_element_name\n    box.style.top     = document.documentElement.scrollTop  + rectangle.top       + 'px'\n    box.style.left    = document.documentElement.scrollLeft + rectangle.left      + 'px'\n    box.style.width   =                                       rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =                                       rectangle.height    + 'px'\n    box.classList.add @cfg.box_class_name\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_next_chr_rectangles: ( node, c1, c2 ) ->\n    TraverseUtil.getNextChar c1, c2, [], false\n    selection   = TraverseUtil.setSelection c1, c2\n    range       = selection.getRangeAt 0\n    return null unless node.contains range.startContainer.parentNode\n    return null unless node.contains range.endContainer.parentNode\n    return range.getClientRects()\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_chr_rectangles_of_node: ( node ) ->\n    text_node     = node.childNodes[ 0 ]\n    c1            = new Cursor text_node, 0, text_node.data\n    c2            = new Cursor text_node, 0, text_node.data\n    TraverseUtil.setSelection c1, c2\n    loop\n      rectangles = @_get_next_chr_rectangles node, c1, c2\n      break unless rectangles?\n      yield from rectangles\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _reset_line_walker: ( s ) ->\n    s.min_top       = +Infinity\n    s.max_bottom    = -Infinity\n    s.min_left      = +Infinity\n    s.max_right     = -Infinity\n    s.avg_height    = 0\n    s.avg_bottom    = 0\n    s.count         = 0\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_line_rectangles_of_node: ( node ) ->\n    @_reset_line_walker s  = {}\n    for rectangle from @walk_chr_rectangles_of_node node\n      if s.count > 0 and rectangle.bottom - s.avg_bottom > s.avg_height * @cfg.xxx_height_factor\n        yield new DOMRect             \\\n          s.min_left,                 \\   # left\n          s.min_top,                  \\   # top\n          s.max_right   - s.min_left, \\   # width\n          s.max_bottom  - s.min_top       # height\n        @_reset_line_walker s\n      #.......................................................................................................\n      # draw_box rectangle\n      s.count++\n      s.min_top     = Math.min s.min_top,     rectangle.top\n      s.max_bottom  = Math.max s.max_bottom,  rectangle.bottom\n      s.min_left    = Math.min s.min_left,    rectangle.left\n      s.max_right   = Math.max s.max_right,   rectangle.right\n      s.avg_height  = ( s.avg_height * ( s.count - 1 ) / s.count ) + ( rectangle.height * 1 / s.count )\n      s.avg_bottom  = ( s.avg_bottom * ( s.count - 1 ) / s.count ) + ( rectangle.bottom * 1 / s.count )\n    #.........................................................................................................\n    if s.count > 0\n      yield new DOMRect             \\\n        s.min_left,                 \\   # left\n        s.min_top,                  \\   # top\n        s.max_right   - s.min_left, \\   # width\n        s.max_bottom  - s.min_top       # height\n    return null\n\n"
  ]
}