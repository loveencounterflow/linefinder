{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/linefinder.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nTU = require '../deps/traverse_util.js'\n\n#===========================================================================================================\nevery  = ( dts, f  ) =>                            setInterval f,                  dts * 1000\nafter  = ( dts, f  ) => new Promise ( resolve ) => setTimeout  ( -> resolve f() ), dts * 1000\nsleep  = ( dts     ) => new Promise ( resolve ) => setTimeout  resolve,            dts * 1000\ndefer  = ( f = ->  ) => await sleep 0; return await f()\n\n#===========================================================================================================\n### TAINT to be integrated with types ###\ndefaults = {}\n#...........................................................................................................\ndefaults.finder_cfg =\n  ### TAINT inconsistent naming ###\n  box_element_name:   'div'\n  box_class_name:     'box'\n  cover_class_name:   'cover'\n  xxx_height_factor:  1 / 2 ### relative minimum height to recognize line step ###\n#...........................................................................................................\ndefaults.distributor_cfg =\n  paragraph_selector:   'galley > p'\n  iframe_selector:      'iframe'\ndefaults.distributor_cfg = { defaults.finder_cfg..., defaults.distributor_cfg..., }\n\n\n#===========================================================================================================\nclass Slug\n  constructor: ({ llnr, rlnr, node, rectangle, }) ->\n    @llnr       = llnr\n    @rlnr       = rlnr\n    @node       = node\n    @rectangle  = rectangle\n    return undefined\n\n\n#===========================================================================================================\nclass Finder\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT use intertype ###\n    @cfg = Object.freeze { defaults.finder_cfg..., cfg..., }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  draw_box: ( rectangle ) ->\n    box               = document.createElement @cfg.box_element_name\n    box.style.top     =  rectangle.top       + 'px'\n    box.style.left    =  rectangle.left      + 'px'\n    box.style.width   =  rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =  rectangle.height    + 'px'\n    box.classList.add @cfg.box_class_name\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT to be merged with `draw_box()` in new method ###\n  xxx_draw_line_cover: ( rectangle ) ->\n    box               = document.createElement @cfg.box_element_name\n    box.style.top     =  rectangle.top       + 'px'\n    box.style.left    =  rectangle.left      + 'px'\n    box.style.width   =  rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =  rectangle.height    + 'px'\n    box.classList.add @cfg.box_class_name\n    box.classList.add @cfg.cover_class_name\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_next_chr_rectangles: ( node, c1, c2 ) ->\n    TU.TraverseUtil.getNextChar c1, c2, [], false\n    selection   = TU.TraverseUtil.setSelection c1, c2\n    range       = selection.getRangeAt 0\n    return null unless node.contains range.startContainer.parentNode\n    return null unless node.contains range.endContainer.parentNode\n    return range.getClientRects()\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_chr_rectangles_of_node: ( node ) ->\n    text_node     = node.childNodes[ 0 ]\n    c1            = new TU.Cursor text_node, 0, text_node.data\n    c2            = new TU.Cursor text_node, 0, text_node.data\n    TU.TraverseUtil.setSelection c1, c2\n    loop\n      rectangles = @_get_next_chr_rectangles node, c1, c2\n      break unless rectangles?\n      for rectangle from rectangles\n        yield new DOMRect                                       \\\n          rectangle.left + document.documentElement.scrollLeft, \\   # left\n          rectangle.top  + document.documentElement.scrollTop,  \\   # top\n          rectangle.width,                                      \\   # width\n          rectangle.height                                          # height\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _reset_line_walker: ( s ) ->\n    s.min_top       = +Infinity\n    s.max_bottom    = -Infinity\n    s.min_left      = +Infinity\n    s.max_right     = -Infinity\n    s.avg_height    = 0\n    s.avg_bottom    = 0\n    s.count         = 0\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_line_rectangles_of_node: ( node ) ->\n    @_reset_line_walker s  = {}\n    for rectangle from @walk_chr_rectangles_of_node node\n      if s.count > 0 and rectangle.bottom - s.avg_bottom > s.avg_height * @cfg.xxx_height_factor\n        yield new DOMRect             \\\n          s.min_left,                 \\   # left\n          s.min_top,                  \\   # top\n          s.max_right   - s.min_left, \\   # width\n          s.max_bottom  - s.min_top       # height\n        @_reset_line_walker s\n      #.......................................................................................................\n      # draw_box rectangle\n      s.count++\n      s.min_top     = Math.min s.min_top,     rectangle.top\n      s.max_bottom  = Math.max s.max_bottom,  rectangle.bottom\n      s.min_left    = Math.min s.min_left,    rectangle.left\n      s.max_right   = Math.max s.max_right,   rectangle.right\n      s.avg_height  = ( s.avg_height * ( s.count - 1 ) / s.count ) + ( rectangle.height * 1 / s.count )\n      s.avg_bottom  = ( s.avg_bottom * ( s.count - 1 ) / s.count ) + ( rectangle.bottom * 1 / s.count )\n    #.........................................................................................................\n    if s.count > 0\n      yield new DOMRect             \\\n        s.min_left,                 \\   # left\n        s.min_top,                  \\   # top\n        s.max_right   - s.min_left, \\   # width\n        s.max_bottom  - s.min_top       # height\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_slugs_of_node: ( node ) ->\n    rectangles  = [ ( @walk_line_rectangles_of_node node )..., ]\n    line_count  = rectangles.length\n    for rectangle, idx in rectangles\n      llnr  = idx + 1\n      rlnr  = line_count - idx\n      yield new Slug { llnr, rlnr, node, rectangle, }\n    return null\n\n\n#===========================================================================================================\nclass Column\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( ø_iframe, ø_slug ) ->\n    @_ø_iframe  = ø_iframe\n    @first_slug = ø_slug.value\n    @top        = ø_slug.value.rectangle.top\n    @height     = 0\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  scroll_to_first_line: ->\n    @_ø_iframe.window.scrollTo { top: @top, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  set_height_from_slug: ( ø_slug ) ->\n    @height = ø_slug.value.rectangle.bottom - @top\n    return @height\n\n\n#===========================================================================================================\nclass Walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( iterator, stop = null ) ->\n    @_iterator  = iterator\n    @_stop      = stop\n    @done       = false\n    @value      = stop\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  step: ->\n    { value, done, } = @_iterator.next()\n    if done\n      @done   = true\n      @value  = @_stop\n      return @_stop\n    @value = value\n    return value\n\n\n#===========================================================================================================\nclass Node_walker extends Walker\nclass Slug_walker extends Walker\n\n\n#===========================================================================================================\nclass Iframe_walker extends Walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( iterator, stop = null, cfg ) ->\n    super iterator, stop\n    @height                 = null\n    # @galley_document        = null\n    @window                 = null\n    @draw_box               = null\n    @draw_line_cover        = null\n    @cfg                    = cfg\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  step: ->\n    super()\n    return @_stop if @done\n    @height                 = µ.DOM.get_height @value\n    # @galley_document        = @value.contentDocument\n    @window                 = @value.contentWindow\n    ### TAINT may want to return `linefinder` itself ###\n    local_linefinder        = new @window.µ.LINE.Finder @cfg\n    @draw_box               = local_linefinder.draw_box.bind            local_linefinder\n    @draw_line_cover        = local_linefinder.xxx_draw_line_cover.bind local_linefinder\n    return @value\n\n\n#===========================================================================================================\nclass Distributor\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT use `intertype` ###\n    @cfg = Object.freeze { defaults.distributor_cfg..., cfg..., }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  distribute_lines: ->\n    #.......................................................................................................\n    if µ.DOM.page_is_inside_iframe()\n      log '^123-9^', \"leaving b/c document is loaded in iframe\"\n      return null\n    #.......................................................................................................\n    _iframes = µ.DOM.select_all @cfg.iframe_selector\n    unless _iframes.length > 0\n      log '^123-10^', \"leaving b/c document does not have iframes\"\n      return null\n    #.......................................................................................................\n    ### Allow user-scrolling for demo ###\n    # µ.DOM.set ø_iframe.value, 'scrolling', 'true' for ø_iframe.value in µ.DOM.select_all 'ø_iframe.value'\n    #.......................................................................................................\n    ø_iframe          = new Iframe_walker _iframes.values(), null, @cfg\n    ø_iframe.step()\n    ø_node            = new Node_walker ( ø_iframe.window.µ.DOM.select_all @cfg.paragraph_selector ).values()\n    linefinder        = new ø_iframe.window.µ.LINE.Finder @cfg\n    column            = null\n    #.......................................................................................................\n    loop\n      break if ø_iframe.done\n      #.....................................................................................................\n      unless ø_node.step()? # might want to mark galleys without content at this point\n        log '^123-1^', \"nodes done\"; break\n      #.....................................................................................................\n      await defer()\n      ø_slug = new Slug_walker linefinder.walk_slugs_of_node ø_node.value\n      loop\n        unless ø_slug.step()?\n          log '^123-1^', \"slugs done\"; break\n        await defer()\n        #...................................................................................................\n        unless column?.first_slug?\n          column = new Column ø_iframe, ø_slug\n          column.scroll_to_first_line()\n        #...................................................................................................\n        column.set_height_from_slug ø_slug\n        if ø_iframe.height > column.height\n          ø_iframe.draw_box ø_slug.value.rectangle\n          continue\n        #...................................................................................................\n        ø_iframe.draw_line_cover ø_slug.value.rectangle\n        column    = null\n        unless ø_iframe.step()?\n          log '^123-1^', \"iframes done\"; break\n        ø_iframe.draw_box ø_slug.value.rectangle\n        column = new Column ø_iframe, ø_slug\n        column.scroll_to_first_line()\n    #.......................................................................................................\n    return null\n\n\nmodule.exports = { Finder, Distributor, }\n"
  ]
}