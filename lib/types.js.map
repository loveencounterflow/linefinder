{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;EAEA,IAAC,CAAA,KAAD,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,MAAM,CAAC,MAAP,CAAc,IAAd,EAAiB,IAAC,CAAA,KAAK,CAAC,MAAP,CAAA,CAAjB,EAHA;;;;;;;;EAWA,IAAC,CAAA,OAAD,CAAS,YAAT,EAAuB;IAAA,KAAA,EACrB;MAAA,uEAAA,EACE,QAAA,CAAE,CAAF,CAAA;eAAS,MAAO,YAAP,MAAiB,WAAjB,MAA0B,YAA1B,MAAoC,aAApC,MAA+C,aAA/C,MAA0D;MAAnE;IADF;EADqB,CAAvB,EAXA;;;;;;;;EAqBA,IAAC,CAAA,OAAD,CAAS,YAAT,EAAuB;IAAA,KAAA,EACrB;MAAA,sBAAA,EAA6B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAnB;MAAT;IAA7B;EADqB,CAAvB,EArBA;;;EAyBA,IAAC,CAAA,OAAD,CAAS,YAAT,EAAuB;IAAA,KAAA,EACrB;MAAA,oCAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,CAAE,IAAC,CAAA,GAAG,CAAC,QAAL,CAAc,CAAd,CAAF,CAAA,IAAsB,CAAE,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAnB,CAAF;MAA/B;IAAxC;EADqB,CAAvB,EAzBA;;;;EA8BA,IAAC,CAAA,OAAD,CAAS,UAAT,EAA2B,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,CAAA,KAAK,QAAP,CAAA,IAAqB,CAAE,CAAA,YAAa,OAAf;EAA9B,CAA3B;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAA2B,QAAA,CAAE,CAAF,CAAA;WAAS,CAAA,YAAa;EAAtB,CAA3B;AA/BA",
  "sourcesContent": [
    "\n\n'use strict'\n\n@types                    = new ( require 'intertype' ).Intertype()\nObject.assign @, @types.export()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'kb_keytypes', tests:\n#   \"x is a list of kb_keytype\":     ( x ) -> @isa.list_of 'kb_keytype', x\n#   \"x is not empty\":                   ( x ) -> not @isa.empty x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'kb_keytype', tests:\n  \"x is one of 'toggle', 'latch', 'tlatch', 'ptlatch', 'ntlatch', 'push'\": \\\n    ( x ) -> x in [ 'toggle', 'latch', 'tlatch', 'ptlatch', 'ntlatch', 'push', ]\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'kb_keynames', tests:\n#   \"x is a list of kb_keyname\":  ( x ) -> @isa.list_of 'kb_keyname', x\n#   \"x is not empty\":                   ( x ) -> not @isa.empty x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'kb_keyname', tests:\n  \"x is a nonempty_text\":      ( x ) -> @isa.nonempty_text x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'kb_watcher', tests:\n  \"x is a function or a nonempty_text\":   ( x ) -> ( @isa.function x )or ( @isa.nonempty_text x )\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT probably not correct to only check for Element, at least in some cases could be Node as well ###\n@declare 'delement',       ( x ) -> ( x is document ) or ( x instanceof Element )\n@declare 'element',        ( x ) -> x instanceof Element\n\n\n"
  ]
}