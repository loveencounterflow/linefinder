{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nTU                        = require '../deps/traverse_util.js'\nµ                         = require 'mudom'\n\n\n#===========================================================================================================\nevery  = ( dts, f  ) =>                            setInterval f,                  dts * 1000\nafter  = ( dts, f  ) => new Promise ( resolve ) => setTimeout  ( -> resolve f() ), dts * 1000\nsleep  = ( dts     ) => new Promise ( resolve ) => setTimeout  resolve,            dts * 1000\ndefer  = ( f = ->  ) => await sleep 0; return await f()\n\n#===========================================================================================================\n### TAINT to be integrated with types ###\ndefaults = {}\n#...........................................................................................................\ndefaults.finder_cfg =\n  ### TAINT inconsistent naming ###\n  linemarker_tagname:       'mu-linemarker'\n  linecover_tagname:        'mu-linecover'\n  line_step_factor:         1 / 2 ### relative minimum height to recognize line step ###\n#...........................................................................................................\ndefaults.distributor_cfg =\n  paragraph_selector:       'mu-galley > p'\n  iframe_selector:          'iframe'\n  iframe_scrolling:         false\n  insert_debug_button:      true\n  debug_class_name:         'debug'\n  debug_button_id:          'mu-debugbutton'\n  insert_stylesheet_after:  null\n  insert_stylesheet_before: null\ndefaults.distributor_cfg = { defaults.finder_cfg..., defaults.distributor_cfg..., }\n\n\n#===========================================================================================================\nclass Slug\n  constructor: ({ llnr, rlnr, node, rectangle, }) ->\n    @llnr       = llnr\n    @rlnr       = rlnr\n    @node       = node\n    @rectangle  = rectangle\n    return undefined\n\n\n#===========================================================================================================\nclass Finder\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT use intertype ###\n    @cfg = Object.freeze { defaults.finder_cfg..., cfg..., }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  draw_box: ( rectangle ) ->\n    box               = document.createElement @cfg.linemarker_tagname\n    box.style.top     =  rectangle.top       + 'px'\n    box.style.left    =  rectangle.left      + 'px'\n    box.style.width   =  rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =  rectangle.height    + 'px'\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT to be merged with `draw_box()` in new method ###\n  xxx_draw_line_cover: ( rectangle ) ->\n    box               = document.createElement @cfg.linecover_tagname\n    box.style.top     =  rectangle.top       + 'px'\n    box.style.left    =  rectangle.left      + 'px'\n    box.style.width   =  rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =  rectangle.height    + 'px'\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_next_chr_rectangles: ( node, c1, c2 ) ->\n    TU.TraverseUtil.getNextChar c1, c2, [], false\n    selection   = TU.TraverseUtil.setSelection c1, c2\n    range       = selection.getRangeAt 0\n    return null unless node.contains range.startContainer.parentNode\n    return null unless node.contains range.endContainer.parentNode\n    return range.getClientRects()\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_chr_rectangles_of_node: ( node ) ->\n    return null unless ( text_node = node.childNodes[ 0 ] )?\n    c1            = new TU.Cursor text_node, 0, text_node.data\n    c2            = new TU.Cursor text_node, 0, text_node.data\n    TU.TraverseUtil.setSelection c1, c2\n    loop\n      rectangles = @_get_next_chr_rectangles node, c1, c2\n      break unless rectangles?\n      for rectangle from rectangles\n        yield new DOMRect                                       \\\n          rectangle.left + document.documentElement.scrollLeft, \\   # left\n          rectangle.top  + document.documentElement.scrollTop,  \\   # top\n          rectangle.width,                                      \\   # width\n          rectangle.height                                          # height\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _reset_line_walker: ( s ) ->\n    s.min_top       = +Infinity\n    s.max_bottom    = -Infinity\n    s.min_left      = +Infinity\n    s.max_right     = -Infinity\n    s.avg_height    = 0\n    s.avg_bottom    = 0\n    s.count         = 0\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_line_rectangles_of_node: ( node ) ->\n    @_reset_line_walker s  = {}\n    for rectangle from @walk_chr_rectangles_of_node node\n      if s.count > 0 and rectangle.bottom - s.avg_bottom > s.avg_height * @cfg.line_step_factor\n        yield new DOMRect             \\\n          s.min_left,                 \\   # left\n          s.min_top,                  \\   # top\n          s.max_right   - s.min_left, \\   # width\n          s.max_bottom  - s.min_top       # height\n        @_reset_line_walker s\n      #.......................................................................................................\n      # draw_box rectangle\n      s.count++\n      s.min_top     = Math.min s.min_top,     rectangle.top\n      s.max_bottom  = Math.max s.max_bottom,  rectangle.bottom\n      s.min_left    = Math.min s.min_left,    rectangle.left\n      s.max_right   = Math.max s.max_right,   rectangle.right\n      s.avg_height  = ( s.avg_height * ( s.count - 1 ) / s.count ) + ( rectangle.height * 1 / s.count )\n      s.avg_bottom  = ( s.avg_bottom * ( s.count - 1 ) / s.count ) + ( rectangle.bottom * 1 / s.count )\n    #.........................................................................................................\n    if s.count > 0\n      yield new DOMRect             \\\n        s.min_left,                 \\   # left\n        s.min_top,                  \\   # top\n        s.max_right   - s.min_left, \\   # width\n        s.max_bottom  - s.min_top       # height\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_slugs_of_node: ( node ) ->\n    rectangles  = [ ( @walk_line_rectangles_of_node node )..., ]\n    line_count  = rectangles.length\n    for rectangle, idx in rectangles\n      llnr  = idx + 1\n      rlnr  = line_count - idx\n      yield new Slug { llnr, rlnr, node, rectangle, }\n    return null\n\n\n#===========================================================================================================\nclass Column\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( ø_iframe, ø_slug ) ->\n    @_ø_iframe  = ø_iframe\n    @first_slug = ø_slug.value\n    @top        = ø_slug.value.rectangle.top\n    @height     = 0\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  scroll_to_first_line: ->\n    @_ø_iframe.window.scrollTo { top: @top, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  set_height_from_slug: ( ø_slug ) ->\n    @height = ø_slug.value.rectangle.bottom - @top\n    return @height\n\n\n#===========================================================================================================\nclass Walker\n  ### TAINT should add `next` method (or well-known symbol) to make it an iterator ###\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( iterator, stop = null ) ->\n    @_iterator  = iterator\n    @_stop      = stop\n    @done       = false\n    @value      = stop\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  [Symbol.iterator]: ->\n    while @step() isnt @_stop\n      yield @\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  step: ->\n    { value, done, } = @_iterator.next()\n    if done\n      @done   = true\n      @value  = @_stop\n      return @_stop\n    @value = value\n    return value\n\n\n#===========================================================================================================\nclass Node_walker extends Walker\nclass Slug_walker extends Walker\n\n\n#===========================================================================================================\nclass Iframe_walker extends Walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( iterator, stop = null, cfg ) ->\n    super iterator, stop\n    @height                 = null\n    # @galley_document        = null\n    @window                 = null\n    @draw_box               = null\n    @draw_line_cover        = null\n    @cfg                    = cfg\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  step: ->\n    super()\n    return @_stop if @done\n    µ.DOM.set @value, 'scrolling', 'no' unless @cfg.iframe_scrolling\n    @height                 = µ.DOM.get_height @value\n    # @galley_document        = @value.contentDocument\n    @window                 = @value.contentWindow\n    ### TAINT may want to return `linefinder` itself ###\n    local_linefinder        = new @window.µ.LINE.Finder @cfg\n    @draw_box               = local_linefinder.draw_box.bind            local_linefinder\n    @draw_line_cover        = local_linefinder.xxx_draw_line_cover.bind local_linefinder\n    return @value\n\n\n#===========================================================================================================\nclass Distributor\n\n  #---------------------------------------------------------------------------------------------------------\n  @is_galley_document:  -> (     µ.DOM.page_is_inside_iframe() ) and ( µ.DOM.select_first 'galley', null )?\n  @is_main_document:    -> ( not µ.DOM.page_is_inside_iframe() ) and ( µ.DOM.select_first 'iframe', null )?\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT use `intertype` ###\n    @cfg = Object.freeze { defaults.distributor_cfg..., cfg..., }\n    @_insert_stylesheet   'after',  @cfg.insert_stylesheet_after    if @cfg.insert_stylesheet_after?\n    @_insert_stylesheet   'before', @cfg.insert_stylesheet_before   if @cfg.insert_stylesheet_before?\n    for ø_iframe from @new_iframe_walker()\n      galley_µ = ø_iframe.window.µ\n      new galley_µ.LINE.Distributor @cfg\n    @insert_debug_button() if @cfg.insert_debug_button\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  new_iframe_walker: -> new Iframe_walker ( µ.DOM.select_all @cfg.iframe_selector ).values(), null, @cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  distribute_lines: ->\n    #.......................................................................................................\n    ### Allow user-scrolling for demo ###\n    # µ.DOM.set ø_iframe.value, 'scrolling', 'true' for ø_iframe.value in µ.DOM.select_all 'ø_iframe.value'\n    #.......................................................................................................\n    ø_iframe          = @new_iframe_walker()\n    ø_iframe.step()\n    ø_node            = new Node_walker ( ø_iframe.window.µ.DOM.select_all @cfg.paragraph_selector ).values()\n    linefinder        = new ø_iframe.window.µ.LINE.Finder @cfg\n    column            = null\n    #.......................................................................................................\n    loop\n      break if ø_iframe.done\n      #.....................................................................................................\n      unless ø_node.step()? # might want to mark galleys without content at this point\n        break\n      #.....................................................................................................\n      await defer()\n      ø_slug = new Slug_walker linefinder.walk_slugs_of_node ø_node.value\n      loop\n        unless ø_slug.step()?\n          break\n        await defer()\n        #...................................................................................................\n        unless column?.first_slug?\n          column = new Column ø_iframe, ø_slug\n          column.scroll_to_first_line()\n        #...................................................................................................\n        column.set_height_from_slug ø_slug\n        if ø_iframe.height > column.height\n          ø_iframe.draw_box ø_slug.value.rectangle\n          continue\n        #...................................................................................................\n        ø_iframe.draw_line_cover ø_slug.value.rectangle\n        column    = null\n        unless ø_iframe.step()?\n          break\n        ø_iframe.draw_box ø_slug.value.rectangle\n        column = new Column ø_iframe, ø_slug\n        column.scroll_to_first_line()\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  mark_lines: ->\n    ø_node            = new Node_walker ( µ.DOM.select_all @cfg.paragraph_selector ).values()\n    linefinder        = new µ.LINE.Finder @cfg\n    #.......................................................................................................\n    loop\n      #.....................................................................................................\n      unless ø_node.step()? # might want to mark galleys without content at this point\n        break\n      #.....................................................................................................\n      await defer()\n      ø_slug = new Slug_walker linefinder.walk_slugs_of_node ø_node.value\n      loop\n        unless ø_slug.step()?\n          break\n        await defer()\n        linefinder.draw_box ø_slug.value.rectangle\n    #.......................................................................................................\n    return null\n\n\n  #=========================================================================================================\n  # INSERTION OF STYLESHEET, DEBUG BUTTON\n  #---------------------------------------------------------------------------------------------------------\n  insert_stylesheet_before:   ( element_or_selector ) -> @_insert_stylesheet   'before', element_or_selector\n  insert_stylesheet_after:    ( element_or_selector ) -> @_insert_stylesheet   'after',  element_or_selector\n\n  #---------------------------------------------------------------------------------------------------------\n  _insert_stylesheet: ( where, ref ) ->\n    ### TAINT code duplication ###\n    element     = if typeof ref is 'string' then ( µ.DOM.select_first ref ) else ref\n    stylesheet  = @_get_stylesheet()\n    switch where\n      when 'before' then µ.DOM.insert_before  element, stylesheet\n      when 'after'  then µ.DOM.insert_after   element, stylesheet\n      else \"unknown location #{µ.TEXT.rpr where}\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_stylesheet: ->\n    ### TAINT must honour element, class name configuration ###\n    ### https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/insertRule ###\n    return µ.DOM.new_stylesheet \"\"\"\n      /* stylesheet inserted by mudom `LINE.Distributor` */\n      .#{@cfg.debug_class_name} iframe {\n        outline:                1px dotted red; }\n\n      #{@cfg.linemarker_tagname} {\n        background-color:       transparent;\n        pointer-events:         none;\n        position:               absolute; }\n\n      .#{@cfg.debug_class_name} #{@cfg.linemarker_tagname} {\n        background-color:       rgba( 255, 248, 0, 0.2 );\n        outline:                1px solid rgba( 255, 0, 0, 0.2 );\n        mix-blend-mode:         multiply; }\n\n      #{@cfg.linecover_tagname} {\n        background-color:       white;\n        pointer-events:         none;\n        position:               absolute; }\n\n      .#{@cfg.debug_class_name} #{@cfg.linecover_tagname} {\n        background-color:       rgba( 255, 0, 0, 0.2 );\n        mix-blend-mode:         multiply; }\n\n      /* ### TAINT replace magic numbers */\n      button##{@cfg.debug_button_id} {\n        position:               fixed;\n        top:                    3mm;\n        left:                   95mm; }\n\n      @media print {\n        button##{@cfg.debug_button_id} {\n          display: none !important; } }\n      \"\"\"\n\n  #---------------------------------------------------------------------------------------------------------\n  insert_debug_button: ->\n    µ.DOM.insert_as_first ( µ.DOM.select_first 'body' ), @_get_debug_button()\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_debug_button: ->\n    R = µ.DOM.parse_one \"<button>DEBUG</button>\"\n    µ.DOM.set R, 'id', @cfg.debug_button_id\n    µ.DOM.on R, 'click', =>\n      µ.DOM.toggle_class ( µ.DOM.select_first 'body' ), @cfg.debug_class_name\n      for ø_iframe from @new_iframe_walker()\n        galley_µ = ø_iframe.window.µ\n        galley_µ.DOM.toggle_class ( galley_µ.DOM.select_first 'body' ), @cfg.debug_class_name\n      return null\n    return R\n\n\n\nmodule.exports = { Finder, Distributor, }\n\n"
  ]
}